<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- <mapper namespace="com.xhg.model.UserMapper"> -->
<mapper namespace="com.xhg.inter.IUserOperation" >
	<resultMap type="User" id="resultListMap">
		<id column="id" property="id" />
		<result column="userName" property="userName" />
		<result column="Age" property="userAge" />
		<result column="userAddress" property="userAddress" />
	</resultMap>

	
	<select id="selectUser" parameterType="String" resultMap="resultListMap">
		select user.Age iAge, user.id, user.userName, user.userAddress from `user` where userName like #{userName}
	</select>
	
	
	<select id="selectUserById" parameterType="int" resultType="User">
		select * from `user` where id = #{id}
	</select>
	
	<!--  执行增加操作的SQL语句。id和parameterType  
       	分别与IUserOperation接口中的addUser方法的名字和  
       	参数类型一致。以#{name}的形式引用Student参数  
       	的name属性，MyBatis将使用反射读取Student参数  
       	的此属性。#{name}中name大小写敏感。引用其他  
       	的gender等属性与此一致。seGeneratedKeys设置  
     	  为"true"表明要MyBatis获取由数据库自动生成的主  
       	键；keyProperty="id"指定把获取到的主键值注入  
       	到Student的id属性
    -->
    <insert id="addUser" parameterType="User" 
        useGeneratedKeys="true" keyProperty="id"> 
        insert into user(userName,userAge,userAddress)  
             values(#{userName},#{userAge},#{userAddress})  
    </insert>
    
    <update id="updateUser" parameterType="User" >
        update user set userName=#{userName},userAge=#{userAge},userAddress=#{userAddress} where id=#{id}
    </update>
    
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete>
    
    <!-- User 联合文章进行查询 方法之一的配置 (多对一的方式)  -->    
    <resultMap id="resultUserArticleList" type="Article">
        <id property="id" column="aid" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        
        <association property="user" javaType="User">
            <id property="id" column="id" />
            <result property="userName" column="userName" />
            <result property="userAddress" column="userAddress" />            
        </association>        
    </resultMap>

	<select id="getUserArticle" parameterType="int" resultMap="resultUserArticleList">
		 select user.id,user.userName,user.userAddress,article.id aid,article.title,article.content from user,article
              where user.id=article.userid and user.id=#{id}
	</select>
	
	<!-- User 联合文章进行查询 方法之二的配置 (多对一的方式) -->    
    <resultMap id="resultUserArticleList-2" type="Article">
        <id property="id" column="aid" />
        <result property="title" column="title" />
        <result property="content" column="content" />        
        <association property="user" javaType="User" resultMap="resultListMap" />            
    </resultMap>
    
    <select id="getUserArticle2" parameterType="int" resultMap="resultUserArticleList-2">
       select user.id,user.userName,user.userAddress,article.id aid,article.title,article.content from user,article
              where user.id=article.userid and user.id=#{id}
    </select>
    
    <!-- 分页查询测试 -->
    <select id="selectArticleListPage" resultMap="resultUserArticleList">
        select user.id,user.userName,user.userAddress,article.id aid,article.title,article.content from user,article 
	          where user.id=article.userid and user.id=#{userid}
    </select>
    
</mapper>